Install Kubernetes Cluster on CentOS 7 with kubeadm and CRI-O
Login to the root user
################# Commands for Master as well as Workernode ###########################
###------Prerquisites--------###
vi /etc/hosts
#add host ip and hostname
#configure firewall
systemctl stop firewall
systemctl disable firewall
#disable selinux
vi /etc/selinux/config
---Selinux=disabled
sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
swapoff -a
modprobe overlay
modprobe br_netfilter
tee /etc/sysctl.d/kubernetes.conf<<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF
sysctl --system

##Install kubelet, kubeadm and kubectl##

tee /etc/yum.repos.d/kubernetes.repo<<EOF
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

yum clean all &&  yum -y makecache
yum -y install git curl wget kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl start kubelet
systemctl enable kubelet

OS=CentOS_7
VERSION=1.26
curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/devel:kubic:libcontainers:stable.repo
curl -L -o /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:$VERSION/$OS/devel:kubic:libcontainers:stable:cri-o:$VERSION.repo

#Install CRI-O
yum remove docker-ce docker-ce-cli containerd.io
yum install cri-o -y

# Start and enable Service
systemctl daemon-reload
systemctl start crio
systemctl enable crio


Commands Only for Master
lsmod | grep br_netfilter
---br_netfilter           22256  0 
   bridge                151336  2 br_netfilter,ebtable_broute

kubeadm config images pull
kubeadm init --pod-network-cidr=10.85.0.0/16 --upload-certs --control-plane-endpoint=<hostnmae of master>
----copy last 3 lines as token and create join-token file and paste in it.
vim join-token
chmod 755 join-token
ssh-keygen
ssh-copy-id root@<workernodes ip or hostname>
scp join-token root@<workernodes:/root/

mkdir -p $HOME/.kube
cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
chown $(id -u):$(id -g) $HOME/.kube/config

##see the status of kubernetes Cluster##
kubectl get nodes

###Only on Worker Nodes###
./join-token



###Install network plugin
In this guide weâ€™ll use Calico. You can choose any other supported network plugins.
kubectl create -f https://docs.projectcalico.org/manifests/tigera-operator.yaml 
kubectl get pods --all-namespaces
kubectl create -f https://docs.projectcalico.org/manifests/custom-resources.yaml
###Method 2 for Calico:
##Install Calico
##Install the Tigera Calico operator and custom resource definitions.
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.5/manifests/tigera-operator.yaml
##Install Calico by creating the necessary custom resource. For more information on configuration options available in this manifest, see the installation reference.
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.24.5/manifests/custom-resources.yaml
